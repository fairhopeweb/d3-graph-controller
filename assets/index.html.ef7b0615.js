import{r as e,o as p,c as t,b as o,a as r,w as c,F as l,i as s,g as n}from"./app.fc7d71bc.js";import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";const u={},d=s(`<h1 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> API</h1><p><code>GraphController</code> has various methods and properties for manipulating graphs at runtime. These are described in the following sections. The following setup is omitted from the samples for brevity.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>
  GraphController<span class="token punctuation">,</span>
  defineGraph<span class="token punctuation">,</span>
  defineGraphConfig<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;d3-graph-controller&#39;</span>

<span class="token keyword">const</span> container <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;graph&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> HTMLDivElement
<span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token function">defineGraph</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">/* ... */</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token function">defineGraphConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">/* ... */</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> controller <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GraphController</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> graph<span class="token punctuation">,</span> config<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2><h3 id="filter-by-node-type" tabindex="-1"><a class="header-anchor" href="#filter-by-node-type" aria-hidden="true">#</a> Filter by Node Type</h3><p>Graphs can be filtered by node types. The filter can be updated at runtime as seen below.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> controller <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GraphController</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> graph<span class="token punctuation">,</span> config<span class="token punctuation">)</span>

controller<span class="token punctuation">.</span><span class="token function">filterNodesByType</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">&#39;nodeTypeToInclude&#39;</span><span class="token punctuation">)</span>

controller<span class="token punctuation">.</span><span class="token function">filterNodesByType</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">&#39;nodeTypeToExclude&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="resize" tabindex="-1"><a class="header-anchor" href="#resize" aria-hidden="true">#</a> Resize</h3>`,8),k=n("While graphs can be "),b=n("configured to resize automatically"),h=n(", manual resizing is also possible."),m=s(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> controller <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GraphController</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> graph<span class="token punctuation">,</span> config<span class="token punctuation">)</span>

controller<span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="restart" tabindex="-1"><a class="header-anchor" href="#restart" aria-hidden="true">#</a> Restart</h3><p>Simulations are automatically restarted when required. Should the need arise in some edge cases, simulations can be manually restarted using <code>GraphController.restart</code>.</p><p>An alpha value defining the <em>heat</em> of the simulation after restarting must be provided.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> controller <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GraphController</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> graph<span class="token punctuation">,</span> config<span class="token punctuation">)</span>

<span class="token keyword">const</span> alpha <span class="token operator">=</span> <span class="token number">0.5</span>

controller<span class="token punctuation">.</span><span class="token function">restart</span><span class="token punctuation">(</span>alpha<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="shutdown" tabindex="-1"><a class="header-anchor" href="#shutdown" aria-hidden="true">#</a> Shutdown</h3><p>Graphs need to be integrated in framework lifecycles. In particular, it is necessary to stop the simulation and the (optional) automatic resizing.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> controller <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GraphController</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> graph<span class="token punctuation">,</span> config<span class="token punctuation">)</span>

controller<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="custom-container danger"><p class="custom-container-title">DANGER</p><p>Not calling <code>GraphController.shutdown</code> when a graph is removed can cause memory leaks.</p></div><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h2><h3 id="include-unlinked" tabindex="-1"><a class="header-anchor" href="#include-unlinked" aria-hidden="true">#</a> Include Unlinked</h3><p>Unlinked nodes, i.e., nodes without incoming or outgoing links, can be included or excluded. The setting can be changed at runtime using the <code>includeUnlinked</code> property. The property can also be read to get the current state.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> controller <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GraphController</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> graph<span class="token punctuation">,</span> config<span class="token punctuation">)</span>

controller<span class="token punctuation">.</span>includeUnlinked <span class="token operator">=</span> <span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="labels" tabindex="-1"><a class="header-anchor" href="#labels" aria-hidden="true">#</a> Labels</h3><p>Node and link labels can be toggled on and off using the respective property. Both properties can also be read to get the current state.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> controller <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GraphController</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> graph<span class="token punctuation">,</span> config<span class="token punctuation">)</span>

controller<span class="token punctuation">.</span>showLinkLabels <span class="token operator">=</span> <span class="token boolean">true</span>

controller<span class="token punctuation">.</span>showNodeLabels <span class="token operator">=</span> <span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="link-filter" tabindex="-1"><a class="header-anchor" href="#link-filter" aria-hidden="true">#</a> Link Filter</h3><p>Link filters can be changed at runtime by assigning a new value as seen below. The property can also be read to get the current filter.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> controller <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GraphController</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> graph<span class="token punctuation">,</span> config<span class="token punctuation">)</span>

<span class="token comment">// Only include reflexive links</span>
controller<span class="token punctuation">.</span><span class="token function-variable function">linkFilter</span> <span class="token operator">=</span> <span class="token punctuation">(</span>link<span class="token operator">:</span> GraphLink<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> link<span class="token punctuation">.</span>source<span class="token punctuation">.</span>id <span class="token operator">===</span> link<span class="token punctuation">.</span>target<span class="token punctuation">.</span>id
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="node-types" tabindex="-1"><a class="header-anchor" href="#node-types" aria-hidden="true">#</a> Node Types</h3><p>An array of available and currently filtered node types can be read using properties seen below.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> controller <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GraphController</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> graph<span class="token punctuation">,</span> config<span class="token punctuation">)</span>

<span class="token keyword">const</span> availableNodeTypes <span class="token operator">=</span> controller<span class="token punctuation">.</span>nodeTypes

<span class="token keyword">const</span> includedNodeTypes <span class="token operator">=</span> controller<span class="token punctuation">.</span>nodeTypeFilter
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,22);function g(y,f){const a=e("RouterLink");return p(),t(l,null,[d,o("p",null,[k,r(a,{to:"/config/#resizing"},{default:c(()=>[b]),_:1}),h]),m],64)}var x=i(u,[["render",g]]);export{x as default};
